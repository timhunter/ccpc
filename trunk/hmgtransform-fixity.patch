205c205,227
<   let print out_ch f = 
---
>   (* let print out_ch f =  *)
>   (*   let pr = output_string out_ch in *)
>   (*   let pre_aux = function *)
>   (*       SELECTOR -> pr " =" *)
>   (*     | LICENSOR -> pr " +" *)
>   (*     | LICENSEE -> pr " -" *)
>   (*     | HEADMV_L -> pr " =>" *)
>   (*     | AFFIXHOP_L -> pr " <=="  *)
>   (*     | HEADMV_R -> pr " <=" *)
>   (*     | AFFIXHOP_R -> pr " ==>" *)
>   (*     | _ -> pr " " *)
>   (*   in pre_aux f.modifier; pr f.name *)
> 
> (* altered by John Hale Sat Oct 22 09:44:24 EDT 2011
>   the prolog operator defs say that for Right Incorporation the arrow comes *after* the feature name
>   similarly for Right Affix-Hop
>   :- op(500, fx, =). % for selection features
>   :- op(500, xf, <=).		% for right incorporation
>   :- op(500, fx, =>). % for left incorporation
>   :- op(500, xf, ==>). % for right affix hop
>   :- op(500, fx, <==). % for left affix hop
> *)
>   let print out_ch f =
207,216c229,239
<     let pre_aux = function
<         SELECTOR -> pr " ="
<       | LICENSOR -> pr " +"
<       | LICENSEE -> pr " -"
<       | HEADMV_L -> pr " =>"
<       | AFFIXHOP_L -> pr " <==" 
<       | HEADMV_R -> pr " <="
<       | AFFIXHOP_R -> pr " ==>"
<       | _ -> pr " "
<     in pre_aux f.modifier; pr f.name
---
>     match f.modifier with
> 	SELECTOR -> pr " ="; pr f.name
>       | LICENSOR -> pr " +"; pr f.name
>       | LICENSEE -> pr " -"; pr f.name
>       | HEADMV_L -> pr " =>"; pr f.name
>       | AFFIXHOP_L -> pr " <=="; pr f.name
>       | HEADMV_R -> pr (" "^f.name); pr "<="
>       | AFFIXHOP_R -> pr (" "^f.name); pr "==>"
>       | CATEGORY -> pr " "; pr f.name
> 
> 
